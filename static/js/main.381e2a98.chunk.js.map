{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","e","setState","target","value","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAIaA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BACtB,6BAAML,EAAMI,QAAQE,OACpB,4BAAKN,EAAMI,QAAQG,YCFdC,G,MAAW,SAACR,GACxB,OACA,oBAAIC,UAAU,YAAd,SAEED,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCNvCM,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACxB,uBACCZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCJSG,E,4MAEnBC,MAAQ,CACNR,SAAU,GACZS,YAAa,I,EASdL,aAAe,SAACM,GACf,EAAKC,SAAS,CAAEF,YAAaC,EAAEE,OAAOC,S,uDAPtC,WAAqB,IAAD,OAClBC,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKP,SAAS,CAACX,SAAUkB,S,oBAO5C,WAAU,IAAD,EACuBC,KAAKX,MAA9BR,EADE,EACFA,SAAUS,EADR,EACQA,YACXW,EAAmBpB,EAASqB,QAAO,SAAA1B,GAAO,OAC/CA,EAAQE,KAAKyB,cAAcC,SAASd,EAAYa,kBAG/C,OACE,sBAAK9B,UAAU,MAAf,UACF,mDACA,cAAC,EAAD,CACCW,YAAY,kBACZC,aAAce,KAAKf,eAEhB,cAAC,EAAD,CAAUJ,SAAUoB,W,GA9BKI,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.381e2a98.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nexport const Card = (props) => (\r\n    <div className='card-container'>\r\n        <img alt='monster' src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`} />\r\n        <h2>{ props.monster.name }</h2>\r\n        <p>{ props.monster.email }</p>\r\n    </div>\r\n)","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component';\r\n\r\nimport './card-list.styles.css'\r\n\r\nexport const CardList = (props) => {\r\n\treturn (\r\n\t<ul className='card-list'>\r\n\t\t{\r\n\t\t\tprops.monsters.map(monster => <Card key={monster.id} monster={monster}/>)\r\n\t\t}    \r\n\t</ul>)\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n\t<input \r\n\t\tclassName='search'\r\n\t\ttype='search' \r\n\t\tplaceholder={placeholder}\r\n\t\tonChange={handleChange}\r\n\t/>\r\n);","import React, { Component } from 'react';\nimport './App.css';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\n\nexport default class App extends Component {\n  \n  state = {\n    monsters: [],\n\t\tsearchField: ''\n  };\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}));\n  }\n\n\thandleChange = (e) => {\n\t\tthis.setState({ searchField: e.target.value });\n\t}\n \n  render() {\n\t\tconst {monsters, searchField} = this.state;\n\t\tconst filteredMonsters = monsters.filter(monster => \n\t\t\tmonster.name.toLowerCase().includes(searchField.toLowerCase())\n\t\t);\n\n    return (\n      <div className=\"App\">\n\t\t\t\t<h1> Monsters Rolodex</h1>\n\t\t\t\t<SearchBox\n\t\t\t\t\tplaceholder='search monsters'\n\t\t\t\t\thandleChange={this.handleChange}\n\t\t\t\t/>\n        <CardList monsters={filteredMonsters}>\n        </CardList>\n      </div>\n    );\n  }\n  \n}\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}